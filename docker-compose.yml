volumes:
  postgres-data:
    driver: local

x-main-config: &main-config
  build:
    context: .
    dockerfile: main/Dockerfile
    target: development
  volumes:
    - ./main:/app
  depends_on:
    postgres:
      condition: service_healthy
  environment:
    API_PORT: "8000"
    DB_DATABASE: "weatherapp_main"
    DB_HOST: "postgres"
    DB_PASSWORD: ""
    DB_USERNAME: "postgres"
    DEBUG: ${DEBUG:-1}
    UVICORN_HOST: "0.0.0.0"
    UVICORN_PORT: "8000"

x-ui-config: &ui-config
  build:
    context: .
    dockerfile: ui/Dockerfile
    target: development
  volumes:
    - ./ui/public:/app/public
    - ./ui/src:/app/src
  environment:
    VITE_MAIN_API_BASE_URL: "http://localhost:3000/main/api"

services:
  haproxy:
    image: haproxy:3.0-alpine
    ports:
      - "3000:3000"
    volumes:
      - ./docker-compose/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - main
      - ui

  postgres:
    image: postgres:17
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./docker-compose/postgres/create-db.sql:/docker-entrypoint-initdb.d/create-db.sql
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 1m

  main:
    <<: *main-config
    ports:
      - "8000:8000"

  ui:
    <<: *ui-config
    ports:
      - "3039:3039"
